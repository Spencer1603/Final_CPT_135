'''
Created on Dec 11, 2018

@author: M.Spencer, M. Reilling, A. Hicks
'''

from tkinter import *
import tkinter.messagebox
import os.path

class Calculator(Frame):
    def __init__(self):
        #Variables and constants
        self._userVar = 0
        self._userVarStr = ""
        self._userCurrent = []
        self._userCurrentStr = []
        
        x = 0.0
        PI = math.pi(x)
        SINE = math.sin(x)
        COSINE = math.cos(x)
        TANGEANT = math.tan(x)
        
        self._decimalPressed = False
        self._endParenNeeded = 0
        
        #Setup window and widgets
        Frame.__init__(self)
        self.master.title("Text Editor")
        self.grid()
        
        self._display = Frame(self)
        self._display.grid(row = 0, column = 0, rowspan = 2, columnspan = 5, sticky = N+S+E+W)
        self._displayArea = Text(self._display, width = 80, height = 10)
        self._displayArea.grid(row = 0, column = 0, sticky = N+S+E+W)
        
        #Number Buttons
        self._9Btn = Button(self, text = "9", command = self._9Press)
        self._9Btn.grid(row = 4, column = 2)
        
        self._8Btn = Button(self, text = "8", command = self._8Press)
        self._8Btn.grid(row = 4, column = 1)
        
        self._7Btn = Button(self, text = "7", command = self._7Press)
        self._7Btn.grid(row = 4, column = 0)
        
        self._6Btn = Button(self, text = "6", command = self._6Press)
        self._6Btn.grid(row = 5, column = 2)
        
        self._5Btn = Button(self, text = "5", command = self._5Press)
        self._5Btn.grid(row = 5, column = 1)
        
        self._4Btn = Button(self, text = "4", command = self._4Press)
        self._4Btn.grid(row = 5, column = 0)

        self._3Btn = Button(self, text = "3", command = self._3Press)
        self._3Btn.grid(row = 6, column = 2)
        
        self._2Btn = Button(self, text = "2", command = self._2Press)
        self._2Btn.grid(row = 6, column = 1)
        
        self._1Btn = Button(self, text = "1", command = self._1Press)
        self._1Btn.grid(row = 6, column = 0)
        
        self._0Btn = Button(self, text = "0", command = self._0Press)
        self._0Btn.grid(row = 7, column = 0)
        
        #Decimal button, and parenthesis buttons
        self._decimalBtn = Button(self, text = ".", command = self._decimalPress)
        self._decimalBtn.grid(row = 7, column = 1)
        
        self._parenBtn = Button(self, text = "(", command = self._parenPress)
        self._parenBtn.grid(row = 3, column = 3)
        
        self._endParenBtn = Button(self, text = ")", command = self._endParenPress)
        self._endParenBtn.grid(row = 3, column = 4)
        
        self._negativeBtn = Button(self, text = ")", command = self._negativePress)
        self._negativeBtn.grid(row = 7, column = 4)
        
        
        #Operation Buttons
        self._multiplyBtn = Button(self, text = "*", command = self._multiplyPress)
        self._multiplyBtn.grid(row = 4, column = 4)
        
        self._divideBtn = Button(self, text = "/", command = self._dividePress)
        self._divideBtn.grid(row = 5, column = 4)
        
        self._addBtn = Button(self, text = "+", command = self._addPress)
        self._addBtn.grid(row = 6, column = 4)
        
        self._subtractBtn = Button(self, text = "-", command = self._subtractPress)
        self._subtractBtn.grid(row = 7, column = 4)
        
        self.equalBtn = Button(self, text = "-", command = self._equalPress)
        self._subtractBtn.grid(row = 7, column = 5)
        

        self._sineBtn = Button(self, text = "SIN", command = self._sinePress)
        self._sineBtn.grid(row = 3, column = 0)

        self._cosineBtn = Button(self, text = "COS", command = self._cosinePress)
        self._cosineBtn.grid(row = 3, column = 1)

        self._tangeantBtn = Button(self, text = "TAN", command = self._tangeantPress)
        self._tangeantBtn.grid(row = 3, column = 2)
    
    #Number Button Functions    
    def _9Press(self, userVarStr):
        self._displayArea.insert(END, "9")
        userVarStr = userVarStr + "9"

    def _8Press(self, userVarStr):
        self._displayArea.insert(END, "8")
        userVarStr = userVarStr + "8"

    def _7Press(self, userVarStr):
        self._displayArea.insert(END, "7")
        userVarStr = userVarStr + "7"
        
    def _6Press(self, userVarStr):
        self._displayArea.insert(END, "6")
        userVarStr = userVarStr + "6"
    
    def _5Press(self, userVarStr):
        self._displayArea.insert(END, "5")
        userVarStr = userVarStr + "5"
    
    def _4Press(self, userVarStr):
        self._displayArea.insert(END, "4")
        userVarStr = userVarStr + "4"
    
    def _3Press(self, userVarStr):
        self._displayArea.insert(END, "3")
        userVarStr = userVarStr + "3"
    
    def _2Press(self, userVarStr):
        self._displayArea.insert(END, "2")
        userVarStr = userVarStr + "2"
    
    def _1Press(self, userVarStr):
        self._displayArea.insert(END, "1")
        userVarStr = userVarStr + "1"
    
    def _0Press(self, userVarStr):
        self._displayArea.insert(END, "0")
        userVarStr = userVarStr + "0"
    
    #Decimal button function
    def _decimalPress(self, userVarStr, decimalPressed):
        if not decimalPressed:
            self._displayArea.insert(END, ".")
            userVarStr = userVarStr + "."
            self._userVar = float(userVarStr)
            decimalPressed = True
        else:
            tkinter.messagebox("You already have a decimal pressed for this number.")
        
    #Negative sign button function
    def _negativePress(self, userVarStr, userVar):
        self._displayArea.insert(1.0, "-")
        userVarStr = "-" + userVarStr
        userVar = -userVar
        
    #Parenthesis buttons functions
    def _parenPress(self, userVarStr, userVar, endParenNeeded):   
        self._displayArea.insert(END, "(")
        self._userCurrentStr.append(userVarStr)
        self._userCurrent.append(userVar)
        userVarStr = "("
        decimalPressed = False
        endParenNeeded += 1
        
    #Parenthesis buttons functions
    def _endParenPress(self, userVarStr, endParenNeeded):   
        self._displayArea.insert(END, ")")
        self._userVarStr = userVarStr + ")"
        self._userCurrentStr.append(userVarStr)
        userVarStr = ""
        decimalPressed = False
        endParenNeeded -= 1
    
    #Operation Buttons
    def _multiplyPress(self, userVarStr):
        self._displayArea.insert(END, " * ")
        self._userCurrentStr.append(userVarStr)
        self._userCurrentStr.append(" * ")
        userVarStr = ""
        decimalPressed = False
    
    def _dividePress(self):
        self._displayArea.insert(END, " / ")
    
    def _addPress(self):
        self._displayArea.insert(END, " + ")
    
    def _subtractPress(self):
        self._displayArea.insert(END, " - ")
     
    def _equalPress(self, _userCurrentStr):
        currentTotal = "".join(_userCurrentStr) 
        self._displayArea.insert(END, currentTotal)
    
    #def _sinePress(self):
        #self._displayArea.insert(END, "sin(")
        #_parenPress()
        
    #def _cosinePress(self):
        #self._displayArea.insert(END, "cos(")
    
    #def _tangeantPress(self):
        #self._displayArea.insert(END, "tan(")
        
    #def _piPress(self):
    #self._displayArea.insert(END, "pi")

def main(): 
    Calculator().mainloop()

main
